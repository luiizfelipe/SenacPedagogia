/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.CronogramaVO;
import servicos.CronogramaServicos;
import servicos.ServicosFactory;

/**
 *
 * @author 292100561
 */
public class ConsultarCronograma extends javax.swing.JPanel {

    DefaultTableModel dtm = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"ID TURMA", "NOME CURSO", "NOME PROFESSOR", "DATA"}
    );

    /**
     * Creates new form ConsultarCronograma
     */
    public ConsultarCronograma() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtCronograma = new javax.swing.JTable();
        btnConsultar = new javax.swing.JButton();
        jtfIdTurma = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jtCronograma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Valor Custo", "Quantidade"
            }
        ));
        jScrollPane1.setViewportView(jtCronograma);

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        jtfIdTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfIdTurmaActionPerformed(evt);
            }
        });

        jLabel19.setText("TURMA ID");

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        jLabel2.setText("TELA PARA CONSULTAR ");

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 48)); // NOI18N
        jLabel3.setText("CRONOGRAMA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConsultar)
                .addGap(434, 434, 434))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addComponent(jtfIdTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jtfIdTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(btnConsultar)
                .addGap(80, 80, 80)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfIdTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfIdTurmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfIdTurmaActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        filtrar();
    }//GEN-LAST:event_btnConsultarActionPerformed
    private void preencherTabela() {
        try {
            //Busca objeto na CronogramaServicos
            CronogramaServicos ps = ServicosFactory.getCronogramaServicos();

            //Criando um ArrayLista<alunoVO> vaziom, para receber o ArrayList com os dados
            ArrayList<CronogramaVO> prod = new ArrayList<>();

            //Recebendo o ArrayList cheio no Cronograma
            prod = ps.buscarCronograma();

            for (int i = 0; i < prod.size(); i++) {
                dtm.addRow(new String[]{
                    String.valueOf(prod.get(i).getId()),
                    String.valueOf(prod.get(i).getNome_curso()),
                    String.valueOf(prod.get(i).getNome_professor()),
                    String.valueOf(prod.get(i).getData()),});
            }//fecha o laço for

            //Adicionando modelo de tabela com os dados na tabela Cronograma
            jtCronograma.setModel(dtm);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    null,
                    "Erro! GUIManutençãoCronograma.preencherTabela" + e.getMessage());
        }//fim do catch
    }//fim do método preencherTabela

private void limparTabela() {
       
      dtm.setNumRows(0);
   }//fim do método limparTabela
//    
//    
    private void filtrar() {
        String query;
        limparTabela();
        try {

            CronogramaServicos ps = ServicosFactory.getCronogramaServicos();

            if (jtfIdTurma.getText().isEmpty()) {
                JOptionPane.showMessageDialog(
                        null,
                        "Insira alguma propriedade para filtrar");
                        return;
            } else {

                query = "where id_turma = " + jtfIdTurma.getText();
            }
//fim do else

            //Criando um ArrayLista<alunoVO> vaziom, para receber o ArrayList com os dados
            ArrayList<CronogramaVO> prod = new ArrayList<>();

            //Recebendo o ArrayList cheio no Cronograma
            prod = ps.filtrarCronograma(query);

            for (int i = 0; i < prod.size(); i++) {
                dtm.addRow(new String[]{
                    String.valueOf(prod.get(i).getId()),
                    String.valueOf(prod.get(i).getNome_curso()),
                    String.valueOf(prod.get(i).getNome_professor()),
                    String.valueOf(prod.get(i).getData()),});
            }//fecha o laço for

            //Adicionando o modelo de tabela com os dados na tabela jtCronograma
            jtCronograma.setModel(dtm);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    null,
                    "Erro ao filtrar produto! GUIManutençãoCronograma.filtrar " + e.getMessage());
        }
    }//fecha o método filtrar
//    
//    private void deletarCronograma(){
//        try {
//            int linha = jtCronograma.getSelectedRow();
//            
//            if(linha == -1){
//                JOptionPane.showMessageDialog(
//                        null,
//                        "Por favor selecione uma linha!");
//            }else{
//                CronogramaServicos ps = ServicosFactory.getCronogramaServicos();
//                String codCronograma = (String) jtCronograma.getValueAt(linha, 0);
//                ps.deletarCronograma(Integer.parseInt(codCronograma));
//                
//                //Mensagem para o usuário
//                JOptionPane.showMessageDialog(
//                        null,
//                        "Cronograma excluído com sucesso!");
//            }//fim do else
//            
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(
//                    null,
//                    "Erro ao deletar produto! GUIManutencaoCronograma.deletar" + e.getMessage());
//        }
//    }//fim do método deletar
//    
//    private void alterarCronograma() {
//        int linha = jtCronograma.getSelectedRow();
//        if(linha != -1){
//            jtfCodigo.setText((String) jtCronograma.getValueAt(linha, 0)) ;
//            jtfNome.setText((String) jtCronograma.getValueAt(linha, 1)) ;
//            jtfValorCusto.setText((String) jtCronograma.getValueAt(linha, 2)) ;
//            jtfQuantidade.setText((String) jtCronograma.getValueAt(linha, 3)) ;
//        }else{
//            JOptionPane.showMessageDialog(
//                    null,
//                    "Você não selecionou nenhuma linha!");
//        }//fecha o if else
//    }//fecha o método alterarCronograma
//    
//    
//    public void confirmarAlteracao(){
//        try {
//            CronogramaVO pVO = new CronogramaVO();
//            if(jtfNome.getText().isEmpty() ||
//                    jtfValorCusto.getText().isEmpty() ||
//                    jtfQuantidade.getText().isEmpty() ){
//                JOptionPane.showMessageDialog(
//                        null,
//                        "Erro! Por favor insira as informações corretamente!",
//                        "Erro",
//                        JOptionPane.ERROR_MESSAGE);
//            }else{
//                pVO.setIdCronograma(Integer.parseInt(jtfCodigo.getText() ) );
//                pVO.setNome(jtfNome.getText() );
//                pVO.setValorCusto(Double.parseDouble(jtfValorCusto.getText() ) );
//                pVO.setQuantidade(Integer.parseInt(jtfQuantidade.getText() ) );
//                
//                CronogramaServicos ps = ServicosFactory.getCronogramaServicos();
//                ps.alterarCronograma(pVO);
//                
//                JOptionPane.showMessageDialog(
//                        null,
//                        "Cronograma alterado com sucesso!");
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(
//                    null,
//                    "Erro!" + e.getMessage() );
//        }//fecha o try catch
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTable jtCronograma;
    private javax.swing.JTextField jtfIdTurma;
    // End of variables declaration//GEN-END:variables
}
