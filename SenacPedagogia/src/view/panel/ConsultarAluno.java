/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.AlunoVO;
import servicos.AlunoServicos;
import servicos.ServicosFactory;

/**
 *
 * @author 292100561
 */
public class ConsultarAluno extends javax.swing.JPanel {

    DefaultTableModel dtm = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"ID", "NOME", "TELEFONE", "CPF", "EMAIL", "DATA NASCIMENTO", "ENDEREÇO", "CRIAÇÃO DA CONTA", "ÚLTIMO LOGIN"}
    );

    /**
     * Creates new form ConsultarAluno
     */
    public ConsultarAluno() {
        initComponents();
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtAluno = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jtfNome = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jtfCpf = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jtAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Valor Custo", "Quantidade"
            }
        ));
        jScrollPane1.setViewportView(jtAluno);

        jButton1.setText("FILTRAR");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setDefaultCapable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtfNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNomeActionPerformed(evt);
            }
        });

        jLabel19.setText("Nome");

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        jLabel2.setText("TELA PARA CONSULTAR ");

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 48)); // NOI18N
        jLabel3.setText("ALUNOS");

        jLabel20.setText("CPF");

        jtfCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCpfActionPerformed(evt);
            }
        });

        jLabel21.setText("Email");

        jtfEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1199, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))
                                .addGap(35, 35, 35))
                            .addComponent(jLabel19))
                        .addGap(77, 77, 77)
                        .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfCpf, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                    .addComponent(jtfEmail))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        preencherTabela();// TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
filtrar();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtfEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEmailActionPerformed

    private void jtfCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCpfActionPerformed

    private void jtfNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNomeActionPerformed
    private void preencherTabela() {
        try {
            limparTabela();
            //Busca objeto na AlunoServicos
            AlunoServicos ps = ServicosFactory.getAlunoServicos();

            //Criando um ArrayLista<alunoVO> vaziom, para receber o ArrayList com os dados
            ArrayList<AlunoVO> alun = new ArrayList<>();

            //Recebendo o ArrayList cheio no Aluno
            alun = ps.buscarAluno();

            for (int i = 0; i < alun.size(); i++) {
                dtm.addRow(new String[]{
                    String.valueOf(alun.get(i).getIdAluno()),
                    String.valueOf(alun.get(i).getNome()),
                    String.valueOf(alun.get(i).getTelefone()),
                    String.valueOf(alun.get(i).getCpf()),
                    String.valueOf(alun.get(i).getEmail()),
                    String.valueOf(alun.get(i).getData_nascimento()),
                    String.valueOf(alun.get(i).getEndereco()),
                    String.valueOf(alun.get(i).getCreateAccount()),
                    String.valueOf(alun.get(i).getLastLogon()),});
            }//fecha o laço for

            //Adicionando modelo de tabela com os dados na tabela Aluno
            jtAluno.setModel(dtm);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    null,
                    "Erro! GUIManutençãoAluno.preencherTabela" + e.getMessage());
        }//fim do catch
    }//fim do método preencherTabela

    private void limparTabela() {

        dtm.setNumRows(0);
    }//fim do método limparTabela
//    
//    

    private void filtrar() {
        limparTabela();
        String query;
        try {

            AlunoServicos ps = ServicosFactory.getAlunoServicos();
            //String pesquisa = (String) jcbPesquisaPro.getSelectedItem();
               query = "WHERE";
            boolean adicionouFiltro = false;

            if (!jtfNome.getText().isEmpty()) {
                query += " nome LIKE '%" + jtfNome.getText() + "%'";
                adicionouFiltro = true;
            }

            if (!jtfCpf.getText().isEmpty()) {
                if (adicionouFiltro) {
                    query += " AND";
                }
                query += " cpf LIKE '%" + jtfCpf.getText() + "%'";
                adicionouFiltro = true;
            }

            if (!jtfEmail.getText().isEmpty()) {
                if (adicionouFiltro) {
                    query += " AND";
                }
                query += " email LIKE '%" + jtfEmail.getText() + "%'";
                adicionouFiltro = true;
            }

            if (!adicionouFiltro) {
                JOptionPane.showMessageDialog(
                        null,
                        "Insira alguma propriedade para filtrar");
                preencherTabela();
                return;
            }
//                if(pesquisa.equals("Código")) {
//                    query = "where idalunuto = " + jtfPesquisaPro.getText();                    
//                }else if(pesquisa.equals("Nome")){
//                    query = "where nome like '%" + jtfPesquisaPro.getText() + "%' ";
//                }else if(pesquisa.equals("Valor Custo")){
//                    query = "where valorcusto = " + jtfPesquisaPro.getText();
//                }else {
//                    query = "where quantidade = " + jtfPesquisaPro.getText();
//                }//fim do else

            //Criando um ArrayLista<alunoVO> vaziom, para receber o ArrayList com os dados
            ArrayList<AlunoVO> alun = new ArrayList<>();

            //Recebendo o ArrayList cheio no Aluno
            alun = ps.filtrarAluno(query);

            for (int i = 0; i < alun.size(); i++) {
                dtm.addRow(new String[]{
                    String.valueOf(alun.get(i).getIdAluno()),
                    String.valueOf(alun.get(i).getNome()),
                    String.valueOf(alun.get(i).getTelefone()),
                    String.valueOf(alun.get(i).getCpf()),
                    String.valueOf(alun.get(i).getEmail()),
                    String.valueOf(alun.get(i).getData_nascimento()),
                    String.valueOf(alun.get(i).getEndereco()),
                    String.valueOf(alun.get(i).getCreateAccount()),
                    String.valueOf(alun.get(i).getLastLogon()),});
            }//fecha o laço for

            //Adicionando o modelo de tabela com os dados na tabela jtAluno
            jtAluno.setModel(dtm);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    null,
                    "Erro ao filtrar alunuto! GUIManutençãoAluno.filtrar " + e.getMessage());
        }
    }//fecha o método filtrar
//    
//    private void deletarAluno(){
//        try {
//            int linha = jtAluno.getSelectedRow();
//            
//            if(linha == -1){
//                JOptionPane.showMessageDialog(
//                        null,
//                        "Por favor selecione uma linha!");
//            }else{
//                AlunoServicos ps = ServicosFactory.getAlunoServicos();
//                String codAluno = (String) jtAluno.getValueAt(linha, 0);
//                ps.deletarAluno(Integer.parseInt(codAluno));
//                
//                //Mensagem para o usuário
//                JOptionPane.showMessageDialog(
//                        null,
//                        "Aluno excluído com sucesso!");
//            }//fim do else
//            
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(
//                    null,
//                    "Erro ao deletar alunuto! GUIManutencaoAluno.deletar" + e.getMessage());
//        }
//    }//fim do método deletar
//    
//    private void alterarAluno() {
//        int linha = jtAluno.getSelectedRow();
//        if(linha != -1){
//            jtfCodigo.setText((String) jtAluno.getValueAt(linha, 0)) ;
//            jtfNome.setText((String) jtAluno.getValueAt(linha, 1)) ;
//            jtfValorCusto.setText((String) jtAluno.getValueAt(linha, 2)) ;
//            jtfQuantidade.setText((String) jtAluno.getValueAt(linha, 3)) ;
//        }else{
//            JOptionPane.showMessageDialog(
//                    null,
//                    "Você não selecionou nenhuma linha!");
//        }//fecha o if else
//    }//fecha o método alterarAluno
//    
//    
//    public void confirmarAlteracao(){
//        try {
//            AlunoVO pVO = new AlunoVO();
//            if(jtfNome.getText().isEmpty() ||
//                    jtfValorCusto.getText().isEmpty() ||
//                    jtfQuantidade.getText().isEmpty() ){
//                JOptionPane.showMessageDialog(
//                        null,
//                        "Erro! Por favor insira as informações corretamente!",
//                        "Erro",
//                        JOptionPane.ERROR_MESSAGE);
//            }else{
//                pVO.setIdAluno(Integer.parseInt(jtfCodigo.getText() ) );
//                pVO.setNome(jtfNome.getText() );
//                pVO.setValorCusto(Double.parseDouble(jtfValorCusto.getText() ) );
//                pVO.setQuantidade(Integer.parseInt(jtfQuantidade.getText() ) );
//                
//                AlunoServicos ps = ServicosFactory.getAlunoServicos();
//                ps.alterarAluno(pVO);
//                
//                JOptionPane.showMessageDialog(
//                        null,
//                        "Aluno alterado com sucesso!");
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(
//                    null,
//                    "Erro!" + e.getMessage() );
//        }//fecha o try catch
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtAluno;
    private javax.swing.JTextField jtfCpf;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfNome;
    // End of variables declaration//GEN-END:variables
}
